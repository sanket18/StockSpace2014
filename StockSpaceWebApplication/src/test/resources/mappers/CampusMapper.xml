<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scheduler.mappers.CampusMapper">
	<!-- Author - Shalin Banjara -->
	<!-- Usage - To select a list of campuses for a particular client -->
	<select id="getCampusByClient" parameterType="int"
		resultType="com.scheduler.models.Campus">
		select campusId, campusName from campus where clientId =
		#{clientId}
	</select>
	<!-- Author - Ruby Verma Usage - fetch all campus from db -->
	<select id="findAllCampuses" parameterType="int"
		resultType="com.scheduler.models.Campus">
		SELECT * FROM campus
		order by campusName
	</select>

	<!-- Author - Ruby Verma -->
	<!-- Usage - deletes selected campus -->
	<delete id="deleteCampus" parameterType="int">
		delete from campus where
		campusId = #{campusId}
	</delete>

	<!-- Author - Ruby Verma -->
	<!-- Usage - insert new campus -->
	<insert id="saveCampus" parameterType="com.scheduler.models.Campus"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into campus(clientId,campusName, campusAddress,dateCreated)
		values
		(#{clientId}, #{campusName},#{campusAddress},NOW())
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<!-- Author - Ruby Verma -->
	<!-- Usage - fetches selected campus to edit -->
	<select id="getCampusById" parameterType="int"
		resultType="com.scheduler.models.Campus">
		SELECT * FROM campus where campusId = #{campusId}
	</select>

	<!-- Author - Ruby Verma -->
	<!-- Usage - updates campus fields -->
	<update id="updateCampus" parameterType="int">
		update campus
		set
		clientId = #{clientId},
		campusName = #{campusName},
		campusAddress =
		#{campusAddress},
		dateCreated = CURTIME()
		where campusId = #{campusId}
	</update>

	<!-- Author - Ruby Verma -->
	<!-- Usage - updates campus fields -->
	<select id="validateEntry" parameterType="com.scheduler.models.Campus"
		resultType="int">
		SELECT count(*) FROM campus 
		where campusName = #{campusName}
		and campusAddress = #{campusAddress}
	</select>

</mapper>