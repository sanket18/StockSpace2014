<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scheduler.mappers.AppointmentMapper">

<!--Author - Shalin Banjara  -->
<!--Usage - To insert a new booked appointment in the database  -->
	<insert id="saveAppointment" parameterType="com.scheduler.models.Appointment"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into appointment(appointmentId, departmentTimeId,
		userId,purposeOfVisit,meetingFinished,dateCreated,appointmentDate)
		values
		(#{appointmentId},#{departmentTimeId},#{userId},#{purposeOfVisit},#{meetingFinished},NOW(),#{appointmentDate})
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<update id="finishAppointment" parameterType="int">
		update
		appointment set
		endTime = CURTIME(),
		meetingNotes=#{meetingNotes},
		meetingFinished
		='Y'
		update appointment
		set
		endTime = CURTIME(),
		meetingNotes=#{meetingNotes},
		meetingFinished ='Y'
		where appointmentId
		=#{app_id}
	</update>

	<update id="startAppointmentById" parameterType="int">
		update
		appointment set
		startTime = CURTIME(),
		officialId = #{official_id},
		meetingFinished = 'N'
		where appointmentId = #{app_id}
	</update>

	<select id="getAppointmentById" parameterType="int"
		resultType="com.scheduler.models.Appointment">
		select * from appointment where appointmentId = #{app_id}
	</select>

	<select id="getUserByAppointmentId" parameterType="int"
		resultType="com.scheduler.models.GeneralUser">
		select gu.* from generaluser gu,
		appointment a
		where
		a.appointmentId = #{app_id}
		and a.userId = gu.userId
	</select>
	<select id="getAllAppointment" resultType="com.scheduler.models.AppointmentList">
		select
		appointment.userId,appointment.purposeOfVisit,appointment.dateCreated,
		appointment.appointmentId ,generaluser.firstName,
		generaluser.lastName from appointment
		inner join generaluser on appointment.userId=generaluser.userId
		inner join departmenttimeslot on
		departmenttimeslot.departmentTimeId=appointment.departmentTimeId
		where departmenttimeslot.departmentId=#{departmentId}
		and appointment.appointmentDate=#{appointmentDate}
		and appointment.meetingFinished='N'
		order by time(appointment.dateCreated) asc;
	</select>

	<select id="findAllUserAppointments" parameterType="int"
		resultType="com.scheduler.models.AppointmentDepartment">
		SELECT a.*,d.departmentName FROM appointment a,
		departmenttimeslot ds,
		department d
		WHERE a.departmentTimeId =
		ds.departmentTimeId
		AND ds.departmentId = d.departmentId and a.userId=
		#{userId}
		ORDER BY a.appointmentDate DESC
	</select>

	<select id="findNextAppointment" parameterType="int"
		resultType="com.scheduler.models.Appointment">
		select * from appointment where departmentTimeId in (
		select departmentTimeId from departmenttimeslot where
		departmentId=#{department_id})
		and meetingFinished='N'
		order by
		appointmentId ASC
		Limit 0,1
	</select>

	<select id="getNextUserInQueue" parameterType="int"
		resultType="com.scheduler.models.GeneralUser">
		select g.* from appointment a, generaluser g
		where
		a.departmentTimeId IN (select departmentTimeId from
		departmenttimeslot
		where departmentId = #{department_id})
		and a.meetingFinished='N'
		and
		a.startTime='00:00:00'
		and g.userId=a.userId
		ORDER BY a.appointmentId
		ASC
		Limit 0,1
	</select>

	<update id="cancelAppointment" parameterType="int">
		update appointment
		set meetingFinished = 'C'
		where appointmentId = #{appointmentId}
	</update>

	<update id="userLate" parameterType="com.scheduler.models.Appointment"
		flushCache="true">
		update
		appointment set
		meetingFinished = 'L'
		where
		appointmentId = #{appointmentId}
	</update>
</mapper>
