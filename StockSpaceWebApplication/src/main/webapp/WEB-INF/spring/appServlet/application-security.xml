<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http pattern="/resources/**" security="none" />
	<http pattern="/" security="none" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/client/register"
			access="hasAnyRole('ROLE_ANONYMOUS','GU','OU', 'CL')" />
		<intercept-url pattern="/login"
			access="hasAnyRole('ROLE_ANONYMOUS','GU','OU', 'CL')" />
		<intercept-url pattern="/logout" access="hasAnyRole('GU','OU', 'CL')" />
		<!-- <intercept-url pattern="/**" access="hasAnyRole('GU','OU', 'CL')" 
			/> -->
		<!-- Client pages start -->
		<intercept-url pattern="/client/dashboard" access="hasAnyRole('CL')" />
		<intercept-url pattern="/client/viewstats" access="hasAnyRole('CL')" />
		<intercept-url pattern="/campus/view" access="hasAnyRole('CL')" />
		<intercept-url pattern="/official/users/view" access="hasAnyRole('CL')" />
		<intercept-url pattern="/department/new" access="hasAnyRole('CL')" />
		<intercept-url pattern="/roles/view" access="hasAnyRole('CL')" />
		<intercept-url pattern="/timeslot/view" access="hasAnyRole('CL')" />
		<intercept-url pattern="/client/edit/**" access="hasAnyRole('CL')" />
		<!-- Client pages end -->
		<!-- Official pages start -->
		<intercept-url pattern="/official/dashboard" access="hasAnyRole('OU')" />
		<intercept-url pattern="/official/meeting/viewqueue" access="hasAnyRole('OU')" />
		<intercept-url pattern="/official/meeting/start" access="hasAnyRole('OU')" />
		<intercept-url pattern="/category/view" access="hasAnyRole('OU')" />
		<intercept-url pattern="/official/users/edit/**" access="hasAnyRole('CL', 'OU')" />
		<intercept-url pattern="/official/editpassword/**" access="hasAnyRole('OU')" />
		<!-- Official pages stop -->
		<!-- Generaluser pages start -->
		<intercept-url pattern="/generaluser/dashboard" access="hasAnyRole('GU')" />
		<intercept-url pattern="/appointment/new" access="hasAnyRole('GU')" />
		<intercept-url pattern="/appointment/view" access="hasAnyRole('GU')" />
		<intercept-url pattern="/generaluser/announcements"
			access="hasAnyRole('GU')" />
		<intercept-url pattern="/generaluser/notifications"
			access="hasAnyRole('GU')" />
		<intercept-url pattern="/generaluser/edit/**" access="hasAnyRole('GU')" />
		<intercept-url pattern="/generaluser/editpassword/**"
			access="hasAnyRole('GU')" />
		<!-- Generaluser pages stop -->
		<form-login login-page="/login" default-target-url="/list"
			authentication-failure-url="/login" />
		<logout logout-success-url="/logout" />
		<access-denied-handler error-page="/accessdenied" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email as username, password, true from generaluser where email=?"
				authorities-by-username-query="select email as username,'GU' from generaluser where email=?" />
		</authentication-provider>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email as username,password, true from officialuser where email=?"
				authorities-by-username-query="select email as username, 'OU' from officialuser where email=?" />
		</authentication-provider>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email as username,password, true from client where email=?"
				authorities-by-username-query="select email as username, 'CL' from client where email = ?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>